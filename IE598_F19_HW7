import pandas as pd
import numpy as np
df = pd.read_csv('ccdefault.csv')
df = df.dropna()
df.head

from sklearn.model_selection import train_test_split
X = df.iloc[:,1:24]
y = df.iloc[:,24]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=24)

from sklearn.model_selection import GridSearchCV
from sklearn.ensemble import RandomForestClassifier
param_grid = {'n_estimators': [10,20,30,50,100,150,300,450]}
fc = RandomForestClassifier()
fc_cv = GridSearchCV(estimator = fc,
                     param_grid = param_grid,
                     cv = 10, n_jobs = -1,
                     verbose = 1,
                     return_train_score=True)
fc_cv.fit(X_train,y_train)
print('best n_estimators')
print(format(fc_cv.best_params_))
print('Optimal accuracy score ')
print(format(fc_cv.best_score_))

print(fc_cv.cv_results_['mean_test_score'])

print(fc_cv.cv_results_['mean_fit_time'])

fc = RandomForestClassifier(n_estimators=450)
fc.fit(X_train,y_train)
importances = fc.feature_importances_
print(importances)

importances_sort = np.argsort(importances)[::-1]
import matplotlib.pyplot as plt
dX = df.iloc[:, 0:23]
df.feature_names = list(dX.columns.values) 
df.class_names = df.columns[23]
plt.bar(range(len(importances)), importances[importances_sort], tick_label=np.array(df.feature_names)[importances_sort])
plt.xticks(rotation=45)
plt.show()

print("My name is Heze Liu")
print("My NetID is: hezeliu2")
print("I hereby certify that I have read the University policy on Academic Integrity and that I am not in violation.")
